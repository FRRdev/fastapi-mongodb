version: "3.9"


services:
  fastapi-product:
    build:
      context: .
      args:
        BUILD_ENVIRONMENT: ${BUILD_ENVIRONMENT}
    container_name: fastapi_product
    env_file:
      - .env
    ports:
      - "5011:8001"
    volumes:
      - ./:/app
    depends_on:
      - mongodb-product
      - kafka-product
    networks:
      - product-fastapi
    entrypoint: /bin/sh /app/entrypoint.sh
    command: uvicorn src.api.main:app --reload --host 0.0.0.0 --port 8001 --proxy-headers

  worker-notifications:
    build:
      context: .
      args:
        BUILD_ENVIRONMENT: ${BUILD_ENVIRONMENT}
    container_name: worker_notifications
    env_file:
      - .env
    volumes:
      - ./:/app
    depends_on:
      - mongodb-product
      - kafka-product
    networks:
      - product-fastapi
    command: sh -c "python src/worker/start_consumer.py"


  mongodb-product:
    image: mongo:6-jammy
    container_name: mongodb_product
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    env_file:
      - .env
    networks:
      - product-fastapi

  mongodb-express-product:
    image: mongo-express
    container_name: mongodb_express_product
    restart: always
    ports:
      - "28081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb-product
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGODB_ADMIN_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGODB_ADMIN_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://mongodb-product:27017/
    depends_on:
      - mongodb-product
    networks:
      - product-fastapi


  zookeeper-product:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_product
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - product-fastapi

  kafka-product:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_product
    depends_on:
      - zookeeper-product
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-product:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-product:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: nc -z localhost 29092
    networks:
      - product-fastapi

  kafka-ui-product:
    image: provectuslabs/kafka-ui
    container_name: kafka_ui_product
    ports:
      - 8090:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-product:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper_product:2181
    networks:
      - product-fastapi



volumes:
  mongodb_data:


networks:
  product-fastapi:
    name: product-fastapi